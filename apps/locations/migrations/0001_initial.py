# Generated by Django 3.0.2 on 2020-01-30 13:47

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizers', '0003_organizer_logo'),
    ]

    operations = [
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('title', models.CharField(help_text="venue's title.", max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, help_text='an optional description about the venue.', max_length=1023, null=True, verbose_name='description')),
                ('adddress', models.TextField(blank=True, help_text="venue's address.", max_length=1023, null=True, verbose_name='address')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='longitude')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='latitude')),
                ('map_link', models.URLField(blank=True, help_text="a link to venue's location on the map (e.g. google map link).", null=True, verbose_name='map link')),
                ('map_image', models.ImageField(blank=True, help_text="an image showing venue's location on the map.", null=True, upload_to='', verbose_name='map image')),
                ('website', models.URLField(blank=True, help_text="a link to the venue's website, or any social page (e.g. in Instagram).", null=True, verbose_name='website')),
                ('organizer', models.ForeignKey(help_text='the organizer to whom the venue belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='venues', to='organizers.Organizer', verbose_name='organizer')),
            ],
            options={
                'verbose_name': 'venue',
                'verbose_name_plural': 'venues',
                'ordering': ['title'],
            },
        ),
    ]
