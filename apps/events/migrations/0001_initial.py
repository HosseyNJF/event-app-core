# Generated by Django 3.0.2 on 2020-01-30 14:10

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('locations', '0001_initial'),
        ('organizers', '0003_organizer_logo'),
        ('utils', '0002_link_created_by'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('title', models.CharField(help_text="event's main title.", max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, help_text='a description about event, shown in the applications.', null=True, verbose_name='description')),
                ('organizer', models.ForeignKey(help_text='the organizer to whom the event type belongs.', on_delete=django.db.models.deletion.PROTECT, related_name='event_types', to='organizers.Organizer', verbose_name='organizer')),
            ],
            options={
                'verbose_name': 'event type',
                'verbose_name_plural': 'event types',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('title', models.CharField(help_text="event's main title.", max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, help_text='a description about event, shown in the applications.', null=True, verbose_name='description')),
                ('logo', models.ImageField(blank=True, help_text='event official logo', null=True, upload_to='', verbose_name='logo')),
                ('banner', models.ImageField(blank=True, help_text='a banner for the event to be shown on the applications.', null=True, upload_to='', verbose_name='banner')),
                ('start_date', models.DateTimeField(blank=True, help_text='shows the staring date and time for event.', null=True, verbose_name='start date')),
                ('end_date', models.DateTimeField(blank=True, help_text='shows the ending date and time for event.', null=True, verbose_name='end date')),
                ('event_type', models.ForeignKey(blank=True, help_text='does this event have any specific type?', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='events.EventType', verbose_name='event type')),
                ('links', models.ManyToManyField(blank=True, help_text='a set of links related to this event, such as website link, registration link, etc.', related_name='_event_links_+', to='utils.Link', verbose_name='links')),
                ('organizer', models.ForeignKey(help_text='the organizer to whom the event belongs.', on_delete=django.db.models.deletion.PROTECT, related_name='events', to='organizers.Organizer', verbose_name='organizer')),
                ('venue', models.ForeignKey(blank=True, help_text='where is the event held?', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='locations.Venue', verbose_name='venue')),
            ],
            options={
                'verbose_name': 'event',
                'verbose_name_plural': 'events',
                'ordering': ['created_at', 'title'],
            },
        ),
    ]
